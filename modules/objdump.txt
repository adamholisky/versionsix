
build/first.o:     file format elf64-x86-64
build/first.o
architecture: i386:x86-64, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x0000000000000000

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000037  0000000000000000  0000000000000000  00000040  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000013  0000000000000000  0000000000000000  00000080  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  0000000000000000  0000000000000000  00000093  2**0
                  ALLOC
  3 .rodata       000001f0  0000000000000000  0000000000000000  00000093  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .data.rel.local 00000168  0000000000000000  0000000000000000  000002a0  2**5
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  5 .comment      00000013  0000000000000000  0000000000000000  00000408  2**0
                  CONTENTS, READONLY
  6 .eh_frame     00000058  0000000000000000  0000000000000000  00000420  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
0000000000000000 l    df *ABS*	0000000000000000 first.c
0000000000000000 l    d  .text	0000000000000000 .text
0000000000000000 l    d  .rodata	0000000000000000 .rodata
0000000000000000 l     O .data.rel.local	00000000000000a8 intel_exceptions
00000000000000c0 l     O .data.rel.local	0000000000000080 bit_array
0000000000000140 l     O .data.rel.local	0000000000000028 error_strings
0000000000000000 g     F .text	000000000000002a main
0000000000000000         *UND*	0000000000000000 printf_
0000000000000000 g     O .data	0000000000000013 hello
000000000000002a g     F .text	000000000000000d get_hello
0000000000000000         *UND*	0000000000000000 _GLOBAL_OFFSET_TABLE_



Disassembly of section .text:

0000000000000000 <main>:
   0:	55                   	push   %rbp
   1:	48 89 e5             	mov    %rsp,%rbp
   4:	48 83 ec 10          	sub    $0x10,%rsp
   8:	89 7d fc             	mov    %edi,-0x4(%rbp)
   b:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
   f:	48 8d 05 00 00 00 00 	lea    0x0(%rip),%rax        # 16 <main+0x16>
			12: R_X86_64_PC32	.rodata+0x1dd
  16:	48 89 c7             	mov    %rax,%rdi
  19:	b8 00 00 00 00       	mov    $0x0,%eax
  1e:	e8 00 00 00 00       	call   23 <main+0x23>
			1f: R_X86_64_PLT32	printf_-0x4
  23:	b8 00 00 00 00       	mov    $0x0,%eax
  28:	c9                   	leave
  29:	c3                   	ret

000000000000002a <get_hello>:
  2a:	55                   	push   %rbp
  2b:	48 89 e5             	mov    %rsp,%rbp
  2e:	48 8b 05 00 00 00 00 	mov    0x0(%rip),%rax        # 35 <get_hello+0xb>
			31: R_X86_64_REX_GOTPCRELX	hello-0x4
  35:	5d                   	pop    %rbp
  36:	c3                   	ret

Disassembly of section .data:

0000000000000000 <hello>:
   0:	48 69 2c 20 66 72 6f 	imul   $0x6d6f7266,(%rax,%riz,1),%rbp
   7:	6d 
   8:	20 61 20             	and    %ah,0x20(%rcx)
   b:	6d                   	insl   (%dx),%es:(%rdi)
   c:	6f                   	outsl  %ds:(%rsi),(%dx)
   d:	64 75 6c             	fs jne 7c <get_hello+0x52>
  10:	65 21 00             	and    %eax,%gs:(%rax)

Disassembly of section .rodata:

0000000000000000 <.rodata>:
   0:	44 69 76 69 64 65 20 	imul   $0x62206564,0x69(%rsi),%r14d
   7:	62 
   8:	79 20                	jns    2a <.rodata+0x2a>
   a:	5a                   	pop    %rdx
   b:	65 72 6f             	gs jb  7d <.rodata+0x7d>
   e:	00 44 65 62          	add    %al,0x62(%rbp,%riz,2)
  12:	75 67                	jne    7b <.rodata+0x7b>
  14:	00 4e 4d             	add    %cl,0x4d(%rsi)
  17:	49 00 42 72          	rex.WB add %al,0x72(%r10)
  1b:	65 61                	gs (bad)
  1d:	6b 70 6f 69          	imul   $0x69,0x6f(%rax),%esi
  21:	6e                   	outsb  %ds:(%rsi),(%dx)
  22:	74 00                	je     24 <.rodata+0x24>
  24:	4f 76 65             	rex.WRXB jbe 8c <.rodata+0x8c>
  27:	72 66                	jb     8f <.rodata+0x8f>
  29:	6c                   	insb   (%dx),%es:(%rdi)
  2a:	6f                   	outsl  %ds:(%rsi),(%dx)
  2b:	77 00                	ja     2d <.rodata+0x2d>
  2d:	42 6f                	rex.X outsl %ds:(%rsi),(%dx)
  2f:	75 6e                	jne    9f <.rodata+0x9f>
  31:	64 20 52 61          	and    %dl,%fs:0x61(%rdx)
  35:	6e                   	outsb  %ds:(%rsi),(%dx)
  36:	67 65 20 45 78       	and    %al,%gs:0x78(%ebp)
  3b:	63 65 65             	movsxd 0x65(%rbp),%esp
  3e:	64 65 64 00 49 6e    	fs gs add %cl,%fs:0x6e(%rcx)
  44:	76 61                	jbe    a7 <.rodata+0xa7>
  46:	6c                   	insb   (%dx),%es:(%rdi)
  47:	69 64 20 4f 70 63 6f 	imul   $0x646f6370,0x4f(%rax,%riz,1),%esp
  4e:	64 
  4f:	65 00 44 65 76       	add    %al,%gs:0x76(%rbp,%riz,2)
  54:	69 63 65 20 4e 6f 74 	imul   $0x746f4e20,0x65(%rbx),%esp
  5b:	20 41 76             	and    %al,0x76(%rcx)
  5e:	61                   	(bad)
  5f:	69 6c 61 62 6c 65 00 	imul   $0x4400656c,0x62(%rcx,%riz,2),%ebp
  66:	44 
  67:	6f                   	outsl  %ds:(%rsi),(%dx)
  68:	75 62                	jne    cc <.rodata+0xcc>
  6a:	6c                   	insb   (%dx),%es:(%rdi)
  6b:	65 20 46 61          	and    %al,%gs:0x61(%rsi)
  6f:	75 6c                	jne    dd <.rodata+0xdd>
  71:	74 00                	je     73 <.rodata+0x73>
  73:	43 6f                	rex.XB outsl %ds:(%rsi),(%dx)
  75:	70 72                	jo     e9 <.rodata+0xe9>
  77:	6f                   	outsl  %ds:(%rsi),(%dx)
  78:	63 65 73             	movsxd 0x73(%rbp),%esp
  7b:	73 6f                	jae    ec <.rodata+0xec>
  7d:	72 20                	jb     9f <.rodata+0x9f>
  7f:	53                   	push   %rbx
  80:	65 67 6d             	gs insl (%dx),%es:(%edi)
  83:	65 6e                	outsb  %gs:(%rsi),(%dx)
  85:	74 20                	je     a7 <.rodata+0xa7>
  87:	4f 76 65             	rex.WRXB jbe ef <.rodata+0xef>
  8a:	72 72                	jb     fe <.rodata+0xfe>
  8c:	75 6e                	jne    fc <.rodata+0xfc>
  8e:	00 49 6e             	add    %cl,0x6e(%rcx)
  91:	76 61                	jbe    f4 <.rodata+0xf4>
  93:	6c                   	insb   (%dx),%es:(%rdi)
  94:	69 64 20 54 53 53 00 	imul   $0x53005353,0x54(%rax,%riz,1),%esp
  9b:	53 
  9c:	65 67 6d             	gs insl (%dx),%es:(%edi)
  9f:	65 6e                	outsb  %gs:(%rsi),(%dx)
  a1:	74 20                	je     c3 <.rodata+0xc3>
  a3:	4e 6f                	rex.WRX outsl %ds:(%rsi),(%dx)
  a5:	74 20                	je     c7 <.rodata+0xc7>
  a7:	50                   	push   %rax
  a8:	72 65                	jb     10f <.rodata+0x10f>
  aa:	73 65                	jae    111 <.rodata+0x111>
  ac:	6e                   	outsb  %ds:(%rsi),(%dx)
  ad:	74 00                	je     af <.rodata+0xaf>
  af:	53                   	push   %rbx
  b0:	74 61                	je     113 <.rodata+0x113>
  b2:	63 6b 2d             	movsxd 0x2d(%rbx),%ebp
  b5:	53                   	push   %rbx
  b6:	65 67 6d             	gs insl (%dx),%es:(%edi)
  b9:	65 6e                	outsb  %gs:(%rsi),(%dx)
  bb:	74 20                	je     dd <.rodata+0xdd>
  bd:	46 61                	rex.RX (bad)
  bf:	75 6c                	jne    12d <.rodata+0x12d>
  c1:	74 00                	je     c3 <.rodata+0xc3>
  c3:	47                   	rex.RXB
  c4:	65 6e                	outsb  %gs:(%rsi),(%dx)
  c6:	65 72 61             	gs jb  12a <.rodata+0x12a>
  c9:	6c                   	insb   (%dx),%es:(%rdi)
  ca:	20 50 72             	and    %dl,0x72(%rax)
  cd:	6f                   	outsl  %ds:(%rsi),(%dx)
  ce:	74 65                	je     135 <.rodata+0x135>
  d0:	63 74 69 6f          	movsxd 0x6f(%rcx,%rbp,2),%esi
  d4:	6e                   	outsb  %ds:(%rsi),(%dx)
  d5:	20 46 61             	and    %al,0x61(%rsi)
  d8:	75 6c                	jne    146 <.rodata+0x146>
  da:	74 00                	je     dc <.rodata+0xdc>
  dc:	50                   	push   %rax
  dd:	61                   	(bad)
  de:	67 65 20 46 61       	and    %al,%gs:0x61(%esi)
  e3:	75 6c                	jne    151 <.rodata+0x151>
  e5:	74 00                	je     e7 <.rodata+0xe7>
  e7:	52                   	push   %rdx
  e8:	65 73 65             	gs jae 150 <.rodata+0x150>
  eb:	72 76                	jb     163 <.rodata+0x163>
  ed:	65 64 00 78 38       	gs add %bh,%fs:0x38(%rax)
  f2:	37                   	(bad)
  f3:	20 46 6c             	and    %al,0x6c(%rsi)
  f6:	6f                   	outsl  %ds:(%rsi),(%dx)
  f7:	61                   	(bad)
  f8:	74 69                	je     163 <.rodata+0x163>
  fa:	6e                   	outsb  %ds:(%rsi),(%dx)
  fb:	67 2d 50 6f 69 6e    	addr32 sub $0x6e696f50,%eax
 101:	74 20                	je     123 <.rodata+0x123>
 103:	45 78 63             	rex.RB js 169 <.rodata+0x169>
 106:	65 70 74             	gs jo  17d <.rodata+0x17d>
 109:	69 6f 6e 00 41 6c 69 	imul   $0x696c4100,0x6e(%rdi),%ebp
 110:	67 6e                	outsb  %ds:(%esi),(%dx)
 112:	6d                   	insl   (%dx),%es:(%rdi)
 113:	65 6e                	outsb  %gs:(%rsi),(%dx)
 115:	74 20                	je     137 <.rodata+0x137>
 117:	43 68 65 63 6b 00    	rex.XB push $0x6b6365
 11d:	4d 61                	rex.WRB (bad)
 11f:	63 68 69             	movsxd 0x69(%rax),%ebp
 122:	6e                   	outsb  %ds:(%rsi),(%dx)
 123:	65 20 43 68          	and    %al,%gs:0x68(%rbx)
 127:	65 63 6b 00          	movsxd %gs:0x0(%rbx),%ebp
 12b:	53                   	push   %rbx
 12c:	49                   	rex.WB
 12d:	4d                   	rex.WRB
 12e:	44 20 46 6c          	and    %r8b,0x6c(%rsi)
 132:	6f                   	outsl  %ds:(%rsi),(%dx)
 133:	61                   	(bad)
 134:	74 69                	je     19f <.rodata+0x19f>
 136:	6e                   	outsb  %ds:(%rsi),(%dx)
 137:	67 2d 50 6f 69 6e    	addr32 sub $0x6e696f50,%eax
 13d:	74 20                	je     15f <.rodata+0x15f>
 13f:	45 78 63             	rex.RB js 1a5 <.rodata+0x1a5>
 142:	65 70 74             	gs jo  1b9 <.rodata+0x1b9>
 145:	69 6f 6e 00 56 69 72 	imul   $0x72695600,0x6e(%rdi),%ebp
 14c:	74 75                	je     1c3 <.rodata+0x1c3>
 14e:	61                   	(bad)
 14f:	6c                   	insb   (%dx),%es:(%rdi)
 150:	69 7a 61 74 69 6f 6e 	imul   $0x6e6f6974,0x61(%rdx),%edi
 157:	20 45 78             	and    %al,0x78(%rbp)
 15a:	63 65 70             	movsxd 0x70(%rbp),%esp
 15d:	74 69                	je     1c8 <.rodata+0x1c8>
 15f:	6f                   	outsl  %ds:(%rsi),(%dx)
 160:	6e                   	outsb  %ds:(%rsi),(%dx)
 161:	00 30                	add    %dh,(%rax)
 163:	30 30                	xor    %dh,(%rax)
 165:	30 00                	xor    %al,(%rax)
 167:	30 30                	xor    %dh,(%rax)
 169:	30 31                	xor    %dh,(%rcx)
 16b:	00 30                	add    %dh,(%rax)
 16d:	30 31                	xor    %dh,(%rcx)
 16f:	30 00                	xor    %al,(%rax)
 171:	30 30                	xor    %dh,(%rax)
 173:	31 31                	xor    %esi,(%rcx)
 175:	00 30                	add    %dh,(%rax)
 177:	31 30                	xor    %esi,(%rax)
 179:	30 00                	xor    %al,(%rax)
 17b:	30 31                	xor    %dh,(%rcx)
 17d:	30 31                	xor    %dh,(%rcx)
 17f:	00 30                	add    %dh,(%rax)
 181:	31 31                	xor    %esi,(%rcx)
 183:	30 00                	xor    %al,(%rax)
 185:	30 31                	xor    %dh,(%rcx)
 187:	31 31                	xor    %esi,(%rcx)
 189:	00 31                	add    %dh,(%rcx)
 18b:	30 30                	xor    %dh,(%rax)
 18d:	30 00                	xor    %al,(%rax)
 18f:	31 30                	xor    %esi,(%rax)
 191:	30 31                	xor    %dh,(%rcx)
 193:	00 31                	add    %dh,(%rcx)
 195:	30 31                	xor    %dh,(%rcx)
 197:	30 00                	xor    %al,(%rax)
 199:	31 30                	xor    %esi,(%rax)
 19b:	31 31                	xor    %esi,(%rcx)
 19d:	00 31                	add    %dh,(%rcx)
 19f:	31 30                	xor    %esi,(%rax)
 1a1:	30 00                	xor    %al,(%rax)
 1a3:	31 31                	xor    %esi,(%rcx)
 1a5:	30 31                	xor    %dh,(%rcx)
 1a7:	00 31                	add    %dh,(%rcx)
 1a9:	31 31                	xor    %esi,(%rcx)
 1ab:	30 00                	xor    %al,(%rax)
 1ad:	31 31                	xor    %esi,(%rcx)
 1af:	31 31                	xor    %esi,(%rcx)
 1b1:	00 4e 6f             	add    %cl,0x6f(%rsi)
 1b4:	6e                   	outsb  %ds:(%rsi),(%dx)
 1b5:	65 00 55 6e          	add    %dl,%gs:0x6e(%rbp)
 1b9:	6b 6e 6f 77          	imul   $0x77,0x6f(%rsi),%ebp
 1bd:	6e                   	outsb  %ds:(%rsi),(%dx)
 1be:	00 53 74             	add    %dl,0x74(%rbx)
 1c1:	61                   	(bad)
 1c2:	74 00                	je     1c4 <.rodata+0x1c4>
 1c4:	49 6e                	rex.WB outsb %ds:(%rsi),(%dx)
 1c6:	76 6c                	jbe    234 <error_strings+0xf4>
 1c8:	61                   	(bad)
 1c9:	69 64 20 45 4c 46 20 	imul   $0x7420464c,0x45(%rax,%riz,1),%esp
 1d0:	74 
 1d1:	79 70                	jns    243 <error_strings+0x103>
 1d3:	65 00 49 6e          	add    %cl,%gs:0x6e(%rcx)
 1d7:	76 61                	jbe    23a <error_strings+0xfa>
 1d9:	6c                   	insb   (%dx),%es:(%rdi)
 1da:	69 64 20 45 4c 46 00 	imul   $0x4800464c,0x45(%rax,%riz,1),%esp
 1e1:	48 
 1e2:	65 6c                	gs insb (%dx),%es:(%rdi)
 1e4:	6c                   	insb   (%dx),%es:(%rdi)
 1e5:	6c                   	insb   (%dx),%es:(%rdi)
 1e6:	2c 20                	sub    $0x20,%al
 1e8:	77 6f                	ja     259 <error_strings+0x119>
 1ea:	72 6c                	jb     258 <error_strings+0x118>
 1ec:	64 21 0a             	and    %ecx,%fs:(%rdx)
	...

Disassembly of section .data.rel.local:

0000000000000000 <intel_exceptions>:
	...
			0: R_X86_64_64	.rodata
			8: R_X86_64_64	.rodata+0xf
			10: R_X86_64_64	.rodata+0x15
			18: R_X86_64_64	.rodata+0x19
			20: R_X86_64_64	.rodata+0x24
			28: R_X86_64_64	.rodata+0x2d
			30: R_X86_64_64	.rodata+0x42
			38: R_X86_64_64	.rodata+0x51
			40: R_X86_64_64	.rodata+0x66
			48: R_X86_64_64	.rodata+0x73
			50: R_X86_64_64	.rodata+0x8f
			58: R_X86_64_64	.rodata+0x9b
			60: R_X86_64_64	.rodata+0xaf
			68: R_X86_64_64	.rodata+0xc3
			70: R_X86_64_64	.rodata+0xdc
			78: R_X86_64_64	.rodata+0xe7
			80: R_X86_64_64	.rodata+0xf0
			88: R_X86_64_64	.rodata+0x10d
			90: R_X86_64_64	.rodata+0x11d
			98: R_X86_64_64	.rodata+0x12b
			a0: R_X86_64_64	.rodata+0x149

00000000000000c0 <bit_array>:
	...
			c0: R_X86_64_64	.rodata+0x162
			c8: R_X86_64_64	.rodata+0x167
			d0: R_X86_64_64	.rodata+0x16c
			d8: R_X86_64_64	.rodata+0x171
			e0: R_X86_64_64	.rodata+0x176
			e8: R_X86_64_64	.rodata+0x17b
			f0: R_X86_64_64	.rodata+0x180
			f8: R_X86_64_64	.rodata+0x185
			100: R_X86_64_64	.rodata+0x18a
			108: R_X86_64_64	.rodata+0x18f
			110: R_X86_64_64	.rodata+0x194
			118: R_X86_64_64	.rodata+0x199
			120: R_X86_64_64	.rodata+0x19e
			128: R_X86_64_64	.rodata+0x1a3
			130: R_X86_64_64	.rodata+0x1a8
			138: R_X86_64_64	.rodata+0x1ad

0000000000000140 <error_strings>:
	...
			140: R_X86_64_64	.rodata+0x1b2
			148: R_X86_64_64	.rodata+0x1b7
			150: R_X86_64_64	.rodata+0x1bf
			158: R_X86_64_64	.rodata+0x1c4
			160: R_X86_64_64	.rodata+0x1d5

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 47 43             	add    %al,0x43(%rdi)
   3:	43 3a 20             	rex.XB cmp (%r8),%spl
   6:	28 47 4e             	sub    %al,0x4e(%rdi)
   9:	55                   	push   %rbp
   a:	29 20                	sub    %esp,(%rax)
   c:	31 32                	xor    %esi,(%rdx)
   e:	2e 32 2e             	cs xor (%rsi),%ch
  11:	30 00                	xor    %al,(%rax)

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 1c    	or     %dl,0x1c000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
			20: R_X86_64_PC32	.text
  22:	00 00                	add    %al,(%rax)
  24:	2a 00                	sub    (%rax),%al
  26:	00 00                	add    %al,(%rax)
  28:	00 41 0e             	add    %al,0xe(%rcx)
  2b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  31:	65 c6                	gs (bad)
  33:	0c 07                	or     $0x7,%al
  35:	08 00                	or     %al,(%rax)
  37:	00 1c 00             	add    %bl,(%rax,%rax,1)
  3a:	00 00                	add    %al,(%rax)
  3c:	3c 00                	cmp    $0x0,%al
  3e:	00 00                	add    %al,(%rax)
  40:	00 00                	add    %al,(%rax)
			40: R_X86_64_PC32	.text+0x2a
  42:	00 00                	add    %al,(%rax)
  44:	0d 00 00 00 00       	or     $0x0,%eax
  49:	41 0e                	rex.B (bad)
  4b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  51:	48 c6                	rex.W (bad)
  53:	0c 07                	or     $0x7,%al
  55:	08 00                	or     %al,(%rax)
	...
